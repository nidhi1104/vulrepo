{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Desktop/cve-analysis-app/src/cveAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CVEAnalysis = () => {\n  _s();\n  const [selectedCVE, setSelectedCVE] = useState('');\n  const [nvdAnalysis, setNvdAnalysis] = useState(null);\n  const [redhatAnalysis, setRedhatAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (selectedCVE) {\n      fetchNvdAnalysis(selectedCVE);\n      fetchRedhatAnalysis(selectedCVE);\n    }\n  }, [selectedCVE]);\n  const handleCVESelection = event => {\n    const cve = event.target.value;\n    setSelectedCVE(cve);\n  };\n  const fetchNvdAnalysis = cve => {\n    setLoading(true);\n    axios.get(`https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=${cve}`).then(response => {\n      setNvdAnalysis(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching NVD analysis:', error);\n      setLoading(false);\n    });\n  };\n\n  // const fetchRedhatAnalysis = (cve) => {\n  //   setLoading(true);\n  //   axios.get(`https://access.redhat.com/hydra/rest/securitydata/cve/${cve}.json`)\n  //     .then(response => {\n  //       setRedhatAnalysis(response.data);\n  //       setLoading(false);\n  //     })\n  //     .catch(error => {\n  //       console.error('Error fetching Red Hat analysis:', error);\n  //       setLoading(false);\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleCVESelection,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a CVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"CVE-2009-5155\",\n        children: \"CVE-2009-5155\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), nvdAnalysis && nvdAnalysis.CVE_data_meta && nvdAnalysis.CVE_Items && nvdAnalysis.CVE_Items.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NVD Analysis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CVE ID: \", nvdAnalysis.CVE_data_meta.ID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", nvdAnalysis.CVE_Items[0].cve.description.description_data[0].value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"References:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: nvdAnalysis.CVE_Items[0].cve.references.reference_data.map(reference => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: reference.url\n        }, reference.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CVEAnalysis, \"2yxUr6LYe+nr8WHY0Cg8pIKNglU=\");\n_c = CVEAnalysis;\nexport default CVEAnalysis;\nvar _c;\n$RefreshReg$(_c, \"CVEAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CVEAnalysis","_s","selectedCVE","setSelectedCVE","nvdAnalysis","setNvdAnalysis","redhatAnalysis","setRedhatAnalysis","loading","setLoading","fetchNvdAnalysis","fetchRedhatAnalysis","handleCVESelection","event","cve","target","value","get","then","response","data","catch","error","console","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","CVE_data_meta","CVE_Items","length","ID","description","description_data","references","reference_data","map","reference","url","_c","$RefreshReg$"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/src/cveAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CVEAnalysis = () => {\n  const [selectedCVE, setSelectedCVE] = useState('');\n  const [nvdAnalysis, setNvdAnalysis] = useState(null);\n  const [redhatAnalysis, setRedhatAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (selectedCVE) {\n      fetchNvdAnalysis(selectedCVE);\n      fetchRedhatAnalysis(selectedCVE);\n    }\n  }, [selectedCVE]);\n\n  const handleCVESelection = (event) => {\n    const cve = event.target.value;\n    setSelectedCVE(cve);\n  };\n\n  const fetchNvdAnalysis = (cve) => {\n    setLoading(true);\n    axios.get(`https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=${cve}`)\n      .then(response => {\n        setNvdAnalysis(response.data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching NVD analysis:', error);\n        setLoading(false);\n      });\n  };\n\n  // const fetchRedhatAnalysis = (cve) => {\n  //   setLoading(true);\n  //   axios.get(`https://access.redhat.com/hydra/rest/securitydata/cve/${cve}.json`)\n  //     .then(response => {\n  //       setRedhatAnalysis(response.data);\n  //       setLoading(false);\n  //     })\n  //     .catch(error => {\n  //       console.error('Error fetching Red Hat analysis:', error);\n  //       setLoading(false);\n  //     });\n  // };\n\n  return (\n    <div>\n      <select onChange={handleCVESelection}>\n        <option value=\"\">Select a CVE</option>\n        <option value=\"CVE-2009-5155\">CVE-2009-5155</option>\n        {/* Add other CVE options here */}\n      </select>\n\n      {loading && <p>Loading...</p>}\n      {nvdAnalysis && nvdAnalysis.CVE_data_meta && nvdAnalysis.CVE_Items && nvdAnalysis.CVE_Items.length > 0 && (\n        <div>\n          <h2>NVD Analysis:</h2>\n          <p>CVE ID: {nvdAnalysis.CVE_data_meta.ID}</p>\n          <p>Description: {nvdAnalysis.CVE_Items[0].cve.description.description_data[0].value}</p>\n          <p>References:</p>\n          <ul>\n            {nvdAnalysis.CVE_Items[0].cve.references.reference_data.map(reference => (\n              <li key={reference.url}>{reference.url}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* {redhatAnalysis && (\n        <div>\n          <h2>Red Hat Analysis:</h2>\n          <p>Threat Severity: {redhatAnalysis?.threat_severity}</p>\n          <p>Public Date: {redhatAnalysis?.public_date}</p>\n          <p>CVSS3 Base Score: {redhatAnalysis?.cvss3?.cvss3_base_score}</p>\n          <p>Details: {redhatAnalysis?.details[0]}</p>\n        </div>\n      )} */}\n    </div>\n  );\n};\n\nexport default CVEAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}