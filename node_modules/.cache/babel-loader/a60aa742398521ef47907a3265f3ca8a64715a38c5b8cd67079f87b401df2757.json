{"ast":null,"code":"\"use strict\";\n\n/**\n * (C) Copyright IBM Corp. 2019, 2023.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IamTokenManager = void 0;\nvar helpers_1 = require(\"../utils/helpers\");\nvar iam_request_based_token_manager_1 = require(\"./iam-request-based-token-manager\");\n/**\n * The IAMTokenManager takes an api key and performs the necessary interactions with\n * the IAM token service to obtain and store a suitable bearer token. Additionally, the IAMTokenManager\n * will retrieve bearer tokens via basic auth using a supplied \"clientId\" and \"clientSecret\" pair.\n */\nvar IamTokenManager = /** @class */function (_super) {\n  __extends(IamTokenManager, _super);\n  /**\n   *\n   * Create a new IamTokenManager instance.\n   *\n   * @param options - Configuration options.\n   * This should be an object containing these fields:\n   * - url: (optional) the endpoint URL for the IAM token service (default value: \"https://iam.cloud.ibm.com\")\n   * - apikey: (required) the IAM api key\n   * - disableSslVerification: (optional) a flag that indicates whether verification of the token server's SSL certificate\n   * should be disabled or not\n   * - headers: (optional) a set of HTTP headers to be sent with each request to the token service\n   * - clientId: (optional) the \"clientId\" and \"clientSecret\" fields are used to form a Basic\n   * Authorization header to be included in each request to the token service\n   * - clientSecret: (optional) the \"clientId\" and \"clientSecret\" fields are used to form a Basic\n   * Authorization header to be included in each request to the token service\n   * - scope: (optional) the \"scope\" parameter to use when fetching the bearer token from the token service\n   *\n   * @throws Error: the configuration options are not valid.\n   */\n  function IamTokenManager(options) {\n    var _this = _super.call(this, options) || this;\n    _this.requiredOptions = ['apikey'];\n    (0, helpers_1.validateInput)(options, _this.requiredOptions);\n    _this.apikey = options.apikey;\n    // construct form data for the apikey use case of iam token management\n    _this.formData.apikey = _this.apikey;\n    _this.formData.grant_type = 'urn:ibm:params:oauth:grant-type:apikey';\n    _this.formData.response_type = 'cloud_iam';\n    return _this;\n  }\n  return IamTokenManager;\n}(iam_request_based_token_manager_1.IamRequestBasedTokenManager);\nexports.IamTokenManager = IamTokenManager;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","IamTokenManager","helpers_1","require","iam_request_based_token_manager_1","_super","options","_this","requiredOptions","validateInput","apikey","formData","grant_type","response_type","IamRequestBasedTokenManager"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/ibm-cloud-sdk-core/auth/token-managers/iam-token-manager.js"],"sourcesContent":["\"use strict\";\n/**\n * (C) Copyright IBM Corp. 2019, 2023.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IamTokenManager = void 0;\nvar helpers_1 = require(\"../utils/helpers\");\nvar iam_request_based_token_manager_1 = require(\"./iam-request-based-token-manager\");\n/**\n * The IAMTokenManager takes an api key and performs the necessary interactions with\n * the IAM token service to obtain and store a suitable bearer token. Additionally, the IAMTokenManager\n * will retrieve bearer tokens via basic auth using a supplied \"clientId\" and \"clientSecret\" pair.\n */\nvar IamTokenManager = /** @class */ (function (_super) {\n    __extends(IamTokenManager, _super);\n    /**\n     *\n     * Create a new IamTokenManager instance.\n     *\n     * @param options - Configuration options.\n     * This should be an object containing these fields:\n     * - url: (optional) the endpoint URL for the IAM token service (default value: \"https://iam.cloud.ibm.com\")\n     * - apikey: (required) the IAM api key\n     * - disableSslVerification: (optional) a flag that indicates whether verification of the token server's SSL certificate\n     * should be disabled or not\n     * - headers: (optional) a set of HTTP headers to be sent with each request to the token service\n     * - clientId: (optional) the \"clientId\" and \"clientSecret\" fields are used to form a Basic\n     * Authorization header to be included in each request to the token service\n     * - clientSecret: (optional) the \"clientId\" and \"clientSecret\" fields are used to form a Basic\n     * Authorization header to be included in each request to the token service\n     * - scope: (optional) the \"scope\" parameter to use when fetching the bearer token from the token service\n     *\n     * @throws Error: the configuration options are not valid.\n     */\n    function IamTokenManager(options) {\n        var _this = _super.call(this, options) || this;\n        _this.requiredOptions = ['apikey'];\n        (0, helpers_1.validateInput)(options, _this.requiredOptions);\n        _this.apikey = options.apikey;\n        // construct form data for the apikey use case of iam token management\n        _this.formData.apikey = _this.apikey;\n        _this.formData.grant_type = 'urn:ibm:params:oauth:grant-type:apikey';\n        _this.formData.response_type = 'cloud_iam';\n        return _this;\n    }\n    return IamTokenManager;\n}(iam_request_based_token_manager_1.IamRequestBasedTokenManager));\nexports.IamTokenManager = IamTokenManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}