{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2021, 2023 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContainerTokenManager = void 0;\nvar helpers_1 = require(\"../utils/helpers\");\nvar file_reading_helpers_1 = require(\"../utils/file-reading-helpers\");\nvar iam_request_based_token_manager_1 = require(\"./iam-request-based-token-manager\");\nvar DEFAULT_CR_TOKEN_FILEPATH1 = '/var/run/secrets/tokens/vault-token';\nvar DEFAULT_CR_TOKEN_FILEPATH2 = '/var/run/secrets/tokens/sa-token';\n/**\n * The ContainerTokenManager retrieves a compute resource token from a file on the container. This token\n * is used to perform the necessary interactions with the IAM token service to obtain and store a suitable\n * bearer (access) token.\n */\nvar ContainerTokenManager = /** @class */function (_super) {\n  __extends(ContainerTokenManager, _super);\n  /**\n   *\n   * Create a new ContainerTokenManager instance.\n   *\n   * @param options - Configuration options.\n   * This should be an object containing these fields:\n   * - url: (optional) the endpoint URL for the token service (default: \"https://iam.cloud.ibm.com\")\n   * - crTokenFilename: (optional) the file containing the compute resource token (default: \"/var/run/secrets/tokens/vault-token\")\n   * - iamProfileName: (optional) the name of the IAM trusted profile associated with the compute resource token (required if iamProfileId is not specified)\n   * - iamProfileId]: (optional) the ID of the IAM trusted profile associated with the compute resource token (required if iamProfileName is not specified)\n   * - headers: (optional) a set of HTTP headers to be sent with each request to the token service\n   * - disableSslVerification: (optional) a flag that indicates whether verification of the token server's SSL certificate\n   * should be disabled or not\n   * - clientId: (optional) the \"clientId\" and \"clientSecret\" fields are used to form a Basic\n   * Authorization header to be included in each request to the token service\n   * - clientSecret: (optional) the \"clientId\" and \"clientSecret\" fields are used to form a Basic\n   * Authorization header to be included in each request to the token service\n   *\n   * @throws Error: the configuration options were invalid\n   */\n  function ContainerTokenManager(options) {\n    var _this = this;\n    // all parameters are optional\n    options = options || {};\n    _this = _super.call(this, options) || this;\n    if (!(0, helpers_1.atLeastOne)(options.iamProfileId, options.iamProfileName)) {\n      throw new Error('At least one of `iamProfileName` or `iamProfileId` must be specified.');\n    }\n    if (options.crTokenFilename) {\n      _this.crTokenFilename = options.crTokenFilename;\n    }\n    if (options.iamProfileName) {\n      _this.iamProfileName = options.iamProfileName;\n    }\n    if (options.iamProfileId) {\n      _this.iamProfileId = options.iamProfileId;\n    }\n    // construct form data for the cr token use case of iam token management\n    _this.formData.grant_type = 'urn:ibm:params:oauth:grant-type:cr-token';\n    return _this;\n  }\n  /**\n   * Sets the \"crTokenFilename\" field\n   * @param crTokenFilename - the name of the file containing the CR token\n   */\n  ContainerTokenManager.prototype.setCrTokenFilename = function (crTokenFilename) {\n    this.crTokenFilename = crTokenFilename;\n  };\n  /**\n   * Sets the name of the IAM trusted profile to use when obtaining an access token from the IAM token server.\n   * @param iamProfileName - the name of the IAM trusted profile\n   */\n  ContainerTokenManager.prototype.setIamProfileName = function (iamProfileName) {\n    this.iamProfileName = iamProfileName;\n  };\n  /**\n   * Sets the ID of the IAM trusted profile to use when obtaining an access token from the IAM token server.\n   * @param iamProfileId - the ID of the IAM trusted profile\n   */\n  ContainerTokenManager.prototype.setIamProfileId = function (iamProfileId) {\n    this.iamProfileId = iamProfileId;\n  };\n  /**\n   * Request an IAM token using a compute resource token.\n   */\n  ContainerTokenManager.prototype.requestToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.formData.cr_token = this.getCrToken();\n        // these member variables can be reset, set them in the form data right\n        // before making the request to ensure they're up to date\n        if (this.iamProfileName) {\n          this.formData.profile_name = this.iamProfileName;\n        }\n        if (this.iamProfileId) {\n          this.formData.profile_id = this.iamProfileId;\n        }\n        return [2 /*return*/, _super.prototype.requestToken.call(this)];\n      });\n    });\n  };\n  /**\n   * Retrieves the CR token from a file using this search order:\n   * 1. User-specified filename (if specified)\n   * 2. Default file #1 (/var/run/secrets/tokens/vault-token)\n   * 3. Default file #2 (/var/run/secrets/tokens/sa-token)\n   * First one found wins.\n   *\n   * @returns the CR token value as a string\n   */\n  ContainerTokenManager.prototype.getCrToken = function () {\n    try {\n      var crToken = null;\n      if (this.crTokenFilename) {\n        // If the user specified a filename, then try to read from that.\n        crToken = (0, file_reading_helpers_1.readCrTokenFile)(this.crTokenFilename);\n      } else {\n        // If no filename was specified, then try our two default filenames.\n        try {\n          crToken = (0, file_reading_helpers_1.readCrTokenFile)(DEFAULT_CR_TOKEN_FILEPATH1);\n        } catch (err) {\n          crToken = (0, file_reading_helpers_1.readCrTokenFile)(DEFAULT_CR_TOKEN_FILEPATH2);\n        }\n      }\n      return crToken;\n    } catch (err) {\n      throw new Error(\"Error reading CR token file: \".concat(err.toString()));\n    }\n  };\n  return ContainerTokenManager;\n}(iam_request_based_token_manager_1.IamRequestBasedTokenManager);\nexports.ContainerTokenManager = ContainerTokenManager;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","pop","length","push","defineProperty","exports","ContainerTokenManager","helpers_1","require","file_reading_helpers_1","iam_request_based_token_manager_1","DEFAULT_CR_TOKEN_FILEPATH1","DEFAULT_CR_TOKEN_FILEPATH2","_super","options","_this","atLeastOne","iamProfileId","iamProfileName","Error","crTokenFilename","formData","grant_type","setCrTokenFilename","setIamProfileName","setIamProfileId","requestToken","_a","cr_token","getCrToken","profile_name","profile_id","crToken","readCrTokenFile","err","concat","toString","IamRequestBasedTokenManager"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/ibm-cloud-sdk-core/auth/token-managers/container-token-manager.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2021, 2023 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerTokenManager = void 0;\nvar helpers_1 = require(\"../utils/helpers\");\nvar file_reading_helpers_1 = require(\"../utils/file-reading-helpers\");\nvar iam_request_based_token_manager_1 = require(\"./iam-request-based-token-manager\");\nvar DEFAULT_CR_TOKEN_FILEPATH1 = '/var/run/secrets/tokens/vault-token';\nvar DEFAULT_CR_TOKEN_FILEPATH2 = '/var/run/secrets/tokens/sa-token';\n/**\n * The ContainerTokenManager retrieves a compute resource token from a file on the container. This token\n * is used to perform the necessary interactions with the IAM token service to obtain and store a suitable\n * bearer (access) token.\n */\nvar ContainerTokenManager = /** @class */ (function (_super) {\n    __extends(ContainerTokenManager, _super);\n    /**\n     *\n     * Create a new ContainerTokenManager instance.\n     *\n     * @param options - Configuration options.\n     * This should be an object containing these fields:\n     * - url: (optional) the endpoint URL for the token service (default: \"https://iam.cloud.ibm.com\")\n     * - crTokenFilename: (optional) the file containing the compute resource token (default: \"/var/run/secrets/tokens/vault-token\")\n     * - iamProfileName: (optional) the name of the IAM trusted profile associated with the compute resource token (required if iamProfileId is not specified)\n     * - iamProfileId]: (optional) the ID of the IAM trusted profile associated with the compute resource token (required if iamProfileName is not specified)\n     * - headers: (optional) a set of HTTP headers to be sent with each request to the token service\n     * - disableSslVerification: (optional) a flag that indicates whether verification of the token server's SSL certificate\n     * should be disabled or not\n     * - clientId: (optional) the \"clientId\" and \"clientSecret\" fields are used to form a Basic\n     * Authorization header to be included in each request to the token service\n     * - clientSecret: (optional) the \"clientId\" and \"clientSecret\" fields are used to form a Basic\n     * Authorization header to be included in each request to the token service\n     *\n     * @throws Error: the configuration options were invalid\n     */\n    function ContainerTokenManager(options) {\n        var _this = this;\n        // all parameters are optional\n        options = options || {};\n        _this = _super.call(this, options) || this;\n        if (!(0, helpers_1.atLeastOne)(options.iamProfileId, options.iamProfileName)) {\n            throw new Error('At least one of `iamProfileName` or `iamProfileId` must be specified.');\n        }\n        if (options.crTokenFilename) {\n            _this.crTokenFilename = options.crTokenFilename;\n        }\n        if (options.iamProfileName) {\n            _this.iamProfileName = options.iamProfileName;\n        }\n        if (options.iamProfileId) {\n            _this.iamProfileId = options.iamProfileId;\n        }\n        // construct form data for the cr token use case of iam token management\n        _this.formData.grant_type = 'urn:ibm:params:oauth:grant-type:cr-token';\n        return _this;\n    }\n    /**\n     * Sets the \"crTokenFilename\" field\n     * @param crTokenFilename - the name of the file containing the CR token\n     */\n    ContainerTokenManager.prototype.setCrTokenFilename = function (crTokenFilename) {\n        this.crTokenFilename = crTokenFilename;\n    };\n    /**\n     * Sets the name of the IAM trusted profile to use when obtaining an access token from the IAM token server.\n     * @param iamProfileName - the name of the IAM trusted profile\n     */\n    ContainerTokenManager.prototype.setIamProfileName = function (iamProfileName) {\n        this.iamProfileName = iamProfileName;\n    };\n    /**\n     * Sets the ID of the IAM trusted profile to use when obtaining an access token from the IAM token server.\n     * @param iamProfileId - the ID of the IAM trusted profile\n     */\n    ContainerTokenManager.prototype.setIamProfileId = function (iamProfileId) {\n        this.iamProfileId = iamProfileId;\n    };\n    /**\n     * Request an IAM token using a compute resource token.\n     */\n    ContainerTokenManager.prototype.requestToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.formData.cr_token = this.getCrToken();\n                // these member variables can be reset, set them in the form data right\n                // before making the request to ensure they're up to date\n                if (this.iamProfileName) {\n                    this.formData.profile_name = this.iamProfileName;\n                }\n                if (this.iamProfileId) {\n                    this.formData.profile_id = this.iamProfileId;\n                }\n                return [2 /*return*/, _super.prototype.requestToken.call(this)];\n            });\n        });\n    };\n    /**\n     * Retrieves the CR token from a file using this search order:\n     * 1. User-specified filename (if specified)\n     * 2. Default file #1 (/var/run/secrets/tokens/vault-token)\n     * 3. Default file #2 (/var/run/secrets/tokens/sa-token)\n     * First one found wins.\n     *\n     * @returns the CR token value as a string\n     */\n    ContainerTokenManager.prototype.getCrToken = function () {\n        try {\n            var crToken = null;\n            if (this.crTokenFilename) {\n                // If the user specified a filename, then try to read from that.\n                crToken = (0, file_reading_helpers_1.readCrTokenFile)(this.crTokenFilename);\n            }\n            else {\n                // If no filename was specified, then try our two default filenames.\n                try {\n                    crToken = (0, file_reading_helpers_1.readCrTokenFile)(DEFAULT_CR_TOKEN_FILEPATH1);\n                }\n                catch (err) {\n                    crToken = (0, file_reading_helpers_1.readCrTokenFile)(DEFAULT_CR_TOKEN_FILEPATH2);\n                }\n            }\n            return crToken;\n        }\n        catch (err) {\n            throw new Error(\"Error reading CR token file: \".concat(err.toString()));\n        }\n    };\n    return ContainerTokenManager;\n}(iam_request_based_token_manager_1.IamRequestBasedTokenManager));\nexports.ContainerTokenManager = ContainerTokenManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}