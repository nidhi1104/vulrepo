{"ast":null,"code":"\"use strict\";\n\n/**\n * (C) Copyright IBM Corp. 2022.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNewLogger = void 0;\nvar debug_1 = __importDefault(require(\"debug\"));\n/**\n * Return a new logger, formatted with a particular name. The logging functions, in\n * order of increasing verbosity, are: `error`, `warn`, `info`, `verbose`, and `debug`.\n *\n * The logger will be an instance of the `debug` package and utilizes its support for\n * configuration with environment variables.\n *\n * Additionally, the logger will be turned on automatically if the \"NODE_DEBUG\"\n * environment variable is set to \"axios\".\n *\n * @param moduleName - the namespace for the logger. The name will appear in\n * the logs and it will be the name used for configuring the log level.\n *\n * @returns the new logger\n */\nfunction getNewLogger(moduleName) {\n  var debug = (0, debug_1.default)(\"\".concat(moduleName, \":debug\"));\n  var error = (0, debug_1.default)(\"\".concat(moduleName, \":error\"));\n  var info = (0, debug_1.default)(\"\".concat(moduleName, \":info\"));\n  var verbose = (0, debug_1.default)(\"\".concat(moduleName, \":verbose\"));\n  var warn = (0, debug_1.default)(\"\".concat(moduleName, \":warning\"));\n  // enable loggers if axios flag is set & mimic log levels severity\n  if (process.env.NODE_DEBUG === 'axios') {\n    debug.enabled = true;\n  }\n  if (debug.enabled) {\n    verbose.enabled = true;\n  }\n  if (verbose.enabled) {\n    info.enabled = true;\n  }\n  if (info.enabled) {\n    warn.enabled = true;\n  }\n  if (warn.enabled) {\n    error.enabled = true;\n  }\n  var newLogger = {\n    debug: debug,\n    error: error,\n    info: info,\n    verbose: verbose,\n    warn: warn\n  };\n  return newLogger;\n}\nexports.getNewLogger = getNewLogger;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","getNewLogger","debug_1","require","moduleName","debug","default","concat","error","info","verbose","warn","process","env","NODE_DEBUG","enabled","newLogger"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/ibm-cloud-sdk-core/lib/get-new-logger.js"],"sourcesContent":["\"use strict\";\n/**\n * (C) Copyright IBM Corp. 2022.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNewLogger = void 0;\nvar debug_1 = __importDefault(require(\"debug\"));\n/**\n * Return a new logger, formatted with a particular name. The logging functions, in\n * order of increasing verbosity, are: `error`, `warn`, `info`, `verbose`, and `debug`.\n *\n * The logger will be an instance of the `debug` package and utilizes its support for\n * configuration with environment variables.\n *\n * Additionally, the logger will be turned on automatically if the \"NODE_DEBUG\"\n * environment variable is set to \"axios\".\n *\n * @param moduleName - the namespace for the logger. The name will appear in\n * the logs and it will be the name used for configuring the log level.\n *\n * @returns the new logger\n */\nfunction getNewLogger(moduleName) {\n    var debug = (0, debug_1.default)(\"\".concat(moduleName, \":debug\"));\n    var error = (0, debug_1.default)(\"\".concat(moduleName, \":error\"));\n    var info = (0, debug_1.default)(\"\".concat(moduleName, \":info\"));\n    var verbose = (0, debug_1.default)(\"\".concat(moduleName, \":verbose\"));\n    var warn = (0, debug_1.default)(\"\".concat(moduleName, \":warning\"));\n    // enable loggers if axios flag is set & mimic log levels severity\n    if (process.env.NODE_DEBUG === 'axios') {\n        debug.enabled = true;\n    }\n    if (debug.enabled) {\n        verbose.enabled = true;\n    }\n    if (verbose.enabled) {\n        info.enabled = true;\n    }\n    if (info.enabled) {\n        warn.enabled = true;\n    }\n    if (warn.enabled) {\n        error.enabled = true;\n    }\n    var newLogger = {\n        debug: debug,\n        error: error,\n        info: info,\n        verbose: verbose,\n        warn: warn,\n    };\n    return newLogger;\n}\nexports.getNewLogger = getNewLogger;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIC,OAAO,GAAGR,eAAe,CAACS,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,YAAYA,CAACG,UAAU,EAAE;EAC9B,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAEH,OAAO,CAACI,OAAO,EAAE,EAAE,CAACC,MAAM,CAACH,UAAU,EAAE,QAAQ,CAAC,CAAC;EACjE,IAAII,KAAK,GAAG,CAAC,CAAC,EAAEN,OAAO,CAACI,OAAO,EAAE,EAAE,CAACC,MAAM,CAACH,UAAU,EAAE,QAAQ,CAAC,CAAC;EACjE,IAAIK,IAAI,GAAG,CAAC,CAAC,EAAEP,OAAO,CAACI,OAAO,EAAE,EAAE,CAACC,MAAM,CAACH,UAAU,EAAE,OAAO,CAAC,CAAC;EAC/D,IAAIM,OAAO,GAAG,CAAC,CAAC,EAAER,OAAO,CAACI,OAAO,EAAE,EAAE,CAACC,MAAM,CAACH,UAAU,EAAE,UAAU,CAAC,CAAC;EACrE,IAAIO,IAAI,GAAG,CAAC,CAAC,EAAET,OAAO,CAACI,OAAO,EAAE,EAAE,CAACC,MAAM,CAACH,UAAU,EAAE,UAAU,CAAC,CAAC;EAClE;EACA,IAAIQ,OAAO,CAACC,GAAG,CAACC,UAAU,KAAK,OAAO,EAAE;IACpCT,KAAK,CAACU,OAAO,GAAG,IAAI;EACxB;EACA,IAAIV,KAAK,CAACU,OAAO,EAAE;IACfL,OAAO,CAACK,OAAO,GAAG,IAAI;EAC1B;EACA,IAAIL,OAAO,CAACK,OAAO,EAAE;IACjBN,IAAI,CAACM,OAAO,GAAG,IAAI;EACvB;EACA,IAAIN,IAAI,CAACM,OAAO,EAAE;IACdJ,IAAI,CAACI,OAAO,GAAG,IAAI;EACvB;EACA,IAAIJ,IAAI,CAACI,OAAO,EAAE;IACdP,KAAK,CAACO,OAAO,GAAG,IAAI;EACxB;EACA,IAAIC,SAAS,GAAG;IACZX,KAAK,EAAEA,KAAK;IACZG,KAAK,EAAEA,KAAK;IACZC,IAAI,EAAEA,IAAI;IACVC,OAAO,EAAEA,OAAO;IAChBC,IAAI,EAAEA;EACV,CAAC;EACD,OAAOK,SAAS;AACpB;AACAjB,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}