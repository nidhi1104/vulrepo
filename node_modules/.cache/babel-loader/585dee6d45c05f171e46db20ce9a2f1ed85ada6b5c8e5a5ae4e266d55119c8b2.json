{"ast":null,"code":"\"use strict\";\n\n/**\n * (C) Copyright IBM Corp. 2019, 2022.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.atMostOne = exports.atLeastOne = exports.removeSuffix = exports.onlyOne = exports.getCurrentTime = exports.validateInput = exports.checkCredentials = exports.computeBasicAuthHeader = void 0;\nvar helper_1 = require(\"../../lib/helper\");\n/**\n * Compute and return a Basic Authorization header from a username and password.\n *\n * @param username - The username or client id\n * @param password - The password or client secret\n * @returns a Basic Auth header with format \"Basic <encoded-credentials>\"\n */\nfunction computeBasicAuthHeader(username, password) {\n  var encodedCreds = Buffer.from(\"\".concat(username, \":\").concat(password)).toString('base64');\n  return \"Basic \".concat(encodedCreds);\n}\nexports.computeBasicAuthHeader = computeBasicAuthHeader;\n// returns true if the string has a curly bracket or quote as the first or last character\n// these are common user-issues that we should handle before they get a network error\nfunction badCharAtAnEnd(value) {\n  return value.startsWith('{') || value.startsWith('\"') || value.endsWith('}') || value.endsWith('\"');\n}\n/**\n * Checks credentials for common user mistakes of copying \\{, \\}, or \\\" characters from the documentation\n *\n * @param obj - the options object holding credentials\n * @param credsToCheck - an array containing the keys of the credentials to check for problems\n * @returns a string with the error message if there were problems, null if not\n */\nfunction checkCredentials(obj, credsToCheck) {\n  var errorMessage = '';\n  credsToCheck.forEach(function (cred) {\n    if (obj[cred] && badCharAtAnEnd(obj[cred])) {\n      errorMessage += \"The \".concat(cred, \" shouldn't start or end with curly brackets or quotes. Be sure to remove any {, }, or \\\"\");\n    }\n  });\n  if (errorMessage.length) {\n    errorMessage += 'Revise these credentials - they should not start or end with curly brackets or quotes.';\n    return new Error(errorMessage);\n  }\n  return null;\n}\nexports.checkCredentials = checkCredentials;\n/**\n * Validates \"options\".\n * @param options - a configuration options object\n * @param requiredOptions - the list of properties that must be present in \"options\"\n *\n * @throws Error: \"options\" failed validation\n */\nfunction validateInput(options, requiredOptions) {\n  // check for required params\n  var missingParamsError = (0, helper_1.getMissingParams)(options, requiredOptions);\n  if (missingParamsError) {\n    throw missingParamsError;\n  }\n  // check certain credentials for common user errors: username, password, and apikey\n  // note: will only apply to certain authenticators\n  var credsToCheck = ['username', 'password', 'apikey'];\n  var credentialProblems = checkCredentials(options, credsToCheck);\n  if (credentialProblems) {\n    throw credentialProblems;\n  }\n}\nexports.validateInput = validateInput;\n/**\n * Gets the current time.\n *\n * @returns the current time in seconds.\n */\nfunction getCurrentTime() {\n  return Math.floor(Date.now() / 1000);\n}\nexports.getCurrentTime = getCurrentTime;\n/**\n * Checks for only one of two elements being defined.\n * Returns true if a is defined and b is undefined,\n * or vice versa. Returns false if both are defined\n * or both are undefined.\n *\n * @param a - The first object\n * @param b - The second object\n * @returns true if and only if exactly one of a or b is defined\n */\nfunction onlyOne(a, b) {\n  return Boolean(a && !b || b && !a);\n}\nexports.onlyOne = onlyOne;\n/**\n * Removes a given suffix if it exists.\n *\n * @param str - the base string to operate on\n * @param suffix - the suffix to remove, if present\n *\n * @returns the substring of \"str\" that remains after the suffix is removed\n */\nfunction removeSuffix(str, suffix) {\n  if (str.endsWith(suffix)) {\n    str = str.substring(0, str.lastIndexOf(suffix));\n  }\n  return str;\n}\nexports.removeSuffix = removeSuffix;\n/**\n * Checks for at least one of two elements being defined.\n *\n * @param a - the first object\n * @param b - the second object\n * @returns true if a or b is defined; false if both are undefined\n */\nfunction atLeastOne(a, b) {\n  return Boolean(a || b);\n}\nexports.atLeastOne = atLeastOne;\n/**\n * Verifies that both properties are not specified.\n *\n * @param a - The first object\n * @param b - The second object\n *\n * @returns  false if a and b are both defined, true otherwise\n\n */\nfunction atMostOne(a, b) {\n  return Boolean(!(a && b));\n}\nexports.atMostOne = atMostOne;","map":{"version":3,"names":["Object","defineProperty","exports","value","atMostOne","atLeastOne","removeSuffix","onlyOne","getCurrentTime","validateInput","checkCredentials","computeBasicAuthHeader","helper_1","require","username","password","encodedCreds","Buffer","from","concat","toString","badCharAtAnEnd","startsWith","endsWith","obj","credsToCheck","errorMessage","forEach","cred","length","Error","options","requiredOptions","missingParamsError","getMissingParams","credentialProblems","Math","floor","Date","now","a","b","Boolean","str","suffix","substring","lastIndexOf"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/ibm-cloud-sdk-core/auth/utils/helpers.js"],"sourcesContent":["\"use strict\";\n/**\n * (C) Copyright IBM Corp. 2019, 2022.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.atMostOne = exports.atLeastOne = exports.removeSuffix = exports.onlyOne = exports.getCurrentTime = exports.validateInput = exports.checkCredentials = exports.computeBasicAuthHeader = void 0;\nvar helper_1 = require(\"../../lib/helper\");\n/**\n * Compute and return a Basic Authorization header from a username and password.\n *\n * @param username - The username or client id\n * @param password - The password or client secret\n * @returns a Basic Auth header with format \"Basic <encoded-credentials>\"\n */\nfunction computeBasicAuthHeader(username, password) {\n    var encodedCreds = Buffer.from(\"\".concat(username, \":\").concat(password)).toString('base64');\n    return \"Basic \".concat(encodedCreds);\n}\nexports.computeBasicAuthHeader = computeBasicAuthHeader;\n// returns true if the string has a curly bracket or quote as the first or last character\n// these are common user-issues that we should handle before they get a network error\nfunction badCharAtAnEnd(value) {\n    return (value.startsWith('{') || value.startsWith('\"') || value.endsWith('}') || value.endsWith('\"'));\n}\n/**\n * Checks credentials for common user mistakes of copying \\{, \\}, or \\\" characters from the documentation\n *\n * @param obj - the options object holding credentials\n * @param credsToCheck - an array containing the keys of the credentials to check for problems\n * @returns a string with the error message if there were problems, null if not\n */\nfunction checkCredentials(obj, credsToCheck) {\n    var errorMessage = '';\n    credsToCheck.forEach(function (cred) {\n        if (obj[cred] && badCharAtAnEnd(obj[cred])) {\n            errorMessage += \"The \".concat(cred, \" shouldn't start or end with curly brackets or quotes. Be sure to remove any {, }, or \\\"\");\n        }\n    });\n    if (errorMessage.length) {\n        errorMessage +=\n            'Revise these credentials - they should not start or end with curly brackets or quotes.';\n        return new Error(errorMessage);\n    }\n    return null;\n}\nexports.checkCredentials = checkCredentials;\n/**\n * Validates \"options\".\n * @param options - a configuration options object\n * @param requiredOptions - the list of properties that must be present in \"options\"\n *\n * @throws Error: \"options\" failed validation\n */\nfunction validateInput(options, requiredOptions) {\n    // check for required params\n    var missingParamsError = (0, helper_1.getMissingParams)(options, requiredOptions);\n    if (missingParamsError) {\n        throw missingParamsError;\n    }\n    // check certain credentials for common user errors: username, password, and apikey\n    // note: will only apply to certain authenticators\n    var credsToCheck = ['username', 'password', 'apikey'];\n    var credentialProblems = checkCredentials(options, credsToCheck);\n    if (credentialProblems) {\n        throw credentialProblems;\n    }\n}\nexports.validateInput = validateInput;\n/**\n * Gets the current time.\n *\n * @returns the current time in seconds.\n */\nfunction getCurrentTime() {\n    return Math.floor(Date.now() / 1000);\n}\nexports.getCurrentTime = getCurrentTime;\n/**\n * Checks for only one of two elements being defined.\n * Returns true if a is defined and b is undefined,\n * or vice versa. Returns false if both are defined\n * or both are undefined.\n *\n * @param a - The first object\n * @param b - The second object\n * @returns true if and only if exactly one of a or b is defined\n */\nfunction onlyOne(a, b) {\n    return Boolean((a && !b) || (b && !a));\n}\nexports.onlyOne = onlyOne;\n/**\n * Removes a given suffix if it exists.\n *\n * @param str - the base string to operate on\n * @param suffix - the suffix to remove, if present\n *\n * @returns the substring of \"str\" that remains after the suffix is removed\n */\nfunction removeSuffix(str, suffix) {\n    if (str.endsWith(suffix)) {\n        str = str.substring(0, str.lastIndexOf(suffix));\n    }\n    return str;\n}\nexports.removeSuffix = removeSuffix;\n/**\n * Checks for at least one of two elements being defined.\n *\n * @param a - the first object\n * @param b - the second object\n * @returns true if a or b is defined; false if both are undefined\n */\nfunction atLeastOne(a, b) {\n    return Boolean(a || b);\n}\nexports.atLeastOne = atLeastOne;\n/**\n * Verifies that both properties are not specified.\n *\n * @param a - The first object\n * @param b - The second object\n *\n * @returns  false if a and b are both defined, true otherwise\n\n */\nfunction atMostOne(a, b) {\n    return Boolean(!(a && b));\n}\nexports.atMostOne = atMostOne;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}