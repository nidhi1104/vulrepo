{"ast":null,"code":"\"use strict\";\n\n/**\r\n * Module convert fs functions to promise based functions\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readFile = exports.writeFileSync = exports.writeFile = exports.read = exports.open = exports.close = exports.stat = exports.createReadStream = exports.pathExists = void 0;\nconst fs = require(\"fs\");\nexports.pathExists = fs.existsSync;\nexports.createReadStream = fs.createReadStream;\nasync function stat(path) {\n  return new Promise((resolve, reject) => {\n    fs.stat(path, (err, stats) => {\n      if (err) reject(err);else resolve(stats);\n    });\n  });\n}\nexports.stat = stat;\nasync function close(fd) {\n  return new Promise((resolve, reject) => {\n    fs.close(fd, err => {\n      if (err) reject(err);else resolve();\n    });\n  });\n}\nexports.close = close;\nasync function open(path, mode) {\n  return new Promise((resolve, reject) => {\n    fs.open(path, mode, (err, fd) => {\n      if (err) reject(err);else resolve(fd);\n    });\n  });\n}\nexports.open = open;\nasync function read(fd, buffer, offset, length, position) {\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, _buffer) => {\n      if (err) reject(err);else resolve({\n        bytesRead,\n        buffer: _buffer\n      });\n    });\n  });\n}\nexports.read = read;\nasync function writeFile(path, data) {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(path, data, err => {\n      if (err) reject(err);else resolve();\n    });\n  });\n}\nexports.writeFile = writeFile;\nfunction writeFileSync(path, data) {\n  fs.writeFileSync(path, data);\n}\nexports.writeFileSync = writeFileSync;\nasync function readFile(path) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(path, (err, buffer) => {\n      if (err) reject(err);else resolve(buffer);\n    });\n  });\n}\nexports.readFile = readFile;","map":{"version":3,"names":["Object","defineProperty","exports","value","readFile","writeFileSync","writeFile","read","open","close","stat","createReadStream","pathExists","fs","require","existsSync","path","Promise","resolve","reject","err","stats","fd","mode","buffer","offset","length","position","bytesRead","_buffer","data"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/strtok3/lib/FsPromise.js"],"sourcesContent":["\"use strict\";\r\n/**\r\n * Module convert fs functions to promise based functions\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.readFile = exports.writeFileSync = exports.writeFile = exports.read = exports.open = exports.close = exports.stat = exports.createReadStream = exports.pathExists = void 0;\r\nconst fs = require(\"fs\");\r\nexports.pathExists = fs.existsSync;\r\nexports.createReadStream = fs.createReadStream;\r\nasync function stat(path) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.stat(path, (err, stats) => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve(stats);\r\n        });\r\n    });\r\n}\r\nexports.stat = stat;\r\nasync function close(fd) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.close(fd, err => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve();\r\n        });\r\n    });\r\n}\r\nexports.close = close;\r\nasync function open(path, mode) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.open(path, mode, (err, fd) => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve(fd);\r\n        });\r\n    });\r\n}\r\nexports.open = open;\r\nasync function read(fd, buffer, offset, length, position) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.read(fd, buffer, offset, length, position, (err, bytesRead, _buffer) => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve({ bytesRead, buffer: _buffer });\r\n        });\r\n    });\r\n}\r\nexports.read = read;\r\nasync function writeFile(path, data) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.writeFile(path, data, err => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve();\r\n        });\r\n    });\r\n}\r\nexports.writeFile = writeFile;\r\nfunction writeFileSync(path, data) {\r\n    fs.writeFileSync(path, data);\r\n}\r\nexports.writeFileSync = writeFileSync;\r\nasync function readFile(path) {\r\n    return new Promise((resolve, reject) => {\r\n        fs.readFile(path, (err, buffer) => {\r\n            if (err)\r\n                reject(err);\r\n            else\r\n                resolve(buffer);\r\n        });\r\n    });\r\n}\r\nexports.readFile = readFile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}