{"ast":null,"code":"\"use strict\";\n\n/**\n * (C) Copyright IBM Corp. 2019, 2023.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenRequestBasedAuthenticator = void 0;\nvar extend_1 = __importDefault(require(\"extend\"));\nvar jwt_token_manager_1 = require(\"../token-managers/jwt-token-manager\");\nvar authenticator_1 = require(\"./authenticator\");\n/**\n * Class for common functionality shared by token-request authenticators.\n * TokenRequestBasedAuthenticators use token managers to retrieve, store,\n * and refresh tokens. Not intended to be used as stand-alone authenticator,\n * but as base class to authenticators that have their own token manager\n * implementations.\n *\n * The token will be added as an Authorization header in the form:\n *\n *      Authorization: Bearer \\<bearer-token\\>\n */\nvar TokenRequestBasedAuthenticator = /** @class */function (_super) {\n  __extends(TokenRequestBasedAuthenticator, _super);\n  /**\n   * Create a new TokenRequestBasedAuthenticator instance with an internal JwtTokenManager.\n   *\n   * @param options - Configuration options.\n   * This should be an object containing these fields:\n   * - url: (optional) the endpoint URL for the token service\n   * - disableSslVerification: (optional) a flag that indicates whether verification of the token server's SSL certificate\n   * should be disabled or not\n   * - headers: (optional) a set of HTTP headers to be sent with each request to the token service\n   */\n  function TokenRequestBasedAuthenticator(options) {\n    var _this = _super.call(this) || this;\n    _this.disableSslVerification = Boolean(options.disableSslVerification);\n    _this.url = options.url;\n    // default to empty object\n    _this.headers = options.headers || {};\n    _this.tokenManager = new jwt_token_manager_1.JwtTokenManager(options);\n    return _this;\n  }\n  /**\n   * Set the flag that indicates whether verification of the server's SSL\n   * certificate should be disabled or not.\n   *\n   * @param value - a flag that indicates whether verification of the\n   *   token server's SSL certificate should be disabled or not.\n   */\n  TokenRequestBasedAuthenticator.prototype.setDisableSslVerification = function (value) {\n    // if they try to pass in a non-boolean value,\n    // use the \"truthy-ness\" of the value\n    this.disableSslVerification = Boolean(value);\n    this.tokenManager.setDisableSslVerification(this.disableSslVerification);\n  };\n  /**\n   * Set headers.\n   *\n   * @param headers - a set of HTTP headers to be sent with each outbound token server request.\n   * Overwrites previous default headers.\n   */\n  TokenRequestBasedAuthenticator.prototype.setHeaders = function (headers) {\n    if (typeof headers !== 'object') {\n      // do nothing, for now\n      return;\n    }\n    this.headers = headers;\n    this.tokenManager.setHeaders(this.headers);\n  };\n  /**\n   * Adds bearer token information to \"requestOptions\". The bearer token information\n   * will be set in the Authorization property of \"requestOptions.headers\" in the form:\n   *\n   *     Authorization: Bearer \\<bearer-token\\>\n   *\n   * @param requestOptions - The request to augment with authentication information.\n   */\n  TokenRequestBasedAuthenticator.prototype.authenticate = function (requestOptions) {\n    return this.tokenManager.getToken().then(function (token) {\n      var authHeader = {\n        Authorization: \"Bearer \".concat(token)\n      };\n      requestOptions.headers = (0, extend_1.default)(true, {}, requestOptions.headers, authHeader);\n    });\n  };\n  return TokenRequestBasedAuthenticator;\n}(authenticator_1.Authenticator);\nexports.TokenRequestBasedAuthenticator = TokenRequestBasedAuthenticator;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","TokenRequestBasedAuthenticator","extend_1","require","jwt_token_manager_1","authenticator_1","_super","options","_this","disableSslVerification","Boolean","url","headers","tokenManager","JwtTokenManager","setDisableSslVerification","setHeaders","authenticate","requestOptions","getToken","then","token","authHeader","Authorization","concat","default","Authenticator"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/ibm-cloud-sdk-core/auth/authenticators/token-request-based-authenticator.js"],"sourcesContent":["\"use strict\";\n/**\n * (C) Copyright IBM Corp. 2019, 2023.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenRequestBasedAuthenticator = void 0;\nvar extend_1 = __importDefault(require(\"extend\"));\nvar jwt_token_manager_1 = require(\"../token-managers/jwt-token-manager\");\nvar authenticator_1 = require(\"./authenticator\");\n/**\n * Class for common functionality shared by token-request authenticators.\n * TokenRequestBasedAuthenticators use token managers to retrieve, store,\n * and refresh tokens. Not intended to be used as stand-alone authenticator,\n * but as base class to authenticators that have their own token manager\n * implementations.\n *\n * The token will be added as an Authorization header in the form:\n *\n *      Authorization: Bearer \\<bearer-token\\>\n */\nvar TokenRequestBasedAuthenticator = /** @class */ (function (_super) {\n    __extends(TokenRequestBasedAuthenticator, _super);\n    /**\n     * Create a new TokenRequestBasedAuthenticator instance with an internal JwtTokenManager.\n     *\n     * @param options - Configuration options.\n     * This should be an object containing these fields:\n     * - url: (optional) the endpoint URL for the token service\n     * - disableSslVerification: (optional) a flag that indicates whether verification of the token server's SSL certificate\n     * should be disabled or not\n     * - headers: (optional) a set of HTTP headers to be sent with each request to the token service\n     */\n    function TokenRequestBasedAuthenticator(options) {\n        var _this = _super.call(this) || this;\n        _this.disableSslVerification = Boolean(options.disableSslVerification);\n        _this.url = options.url;\n        // default to empty object\n        _this.headers = options.headers || {};\n        _this.tokenManager = new jwt_token_manager_1.JwtTokenManager(options);\n        return _this;\n    }\n    /**\n     * Set the flag that indicates whether verification of the server's SSL\n     * certificate should be disabled or not.\n     *\n     * @param value - a flag that indicates whether verification of the\n     *   token server's SSL certificate should be disabled or not.\n     */\n    TokenRequestBasedAuthenticator.prototype.setDisableSslVerification = function (value) {\n        // if they try to pass in a non-boolean value,\n        // use the \"truthy-ness\" of the value\n        this.disableSslVerification = Boolean(value);\n        this.tokenManager.setDisableSslVerification(this.disableSslVerification);\n    };\n    /**\n     * Set headers.\n     *\n     * @param headers - a set of HTTP headers to be sent with each outbound token server request.\n     * Overwrites previous default headers.\n     */\n    TokenRequestBasedAuthenticator.prototype.setHeaders = function (headers) {\n        if (typeof headers !== 'object') {\n            // do nothing, for now\n            return;\n        }\n        this.headers = headers;\n        this.tokenManager.setHeaders(this.headers);\n    };\n    /**\n     * Adds bearer token information to \"requestOptions\". The bearer token information\n     * will be set in the Authorization property of \"requestOptions.headers\" in the form:\n     *\n     *     Authorization: Bearer \\<bearer-token\\>\n     *\n     * @param requestOptions - The request to augment with authentication information.\n     */\n    TokenRequestBasedAuthenticator.prototype.authenticate = function (requestOptions) {\n        return this.tokenManager.getToken().then(function (token) {\n            var authHeader = { Authorization: \"Bearer \".concat(token) };\n            requestOptions.headers = (0, extend_1.default)(true, {}, requestOptions.headers, authHeader);\n        });\n    };\n    return TokenRequestBasedAuthenticator;\n}(authenticator_1.Authenticator));\nexports.TokenRequestBasedAuthenticator = TokenRequestBasedAuthenticator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}