{"ast":null,"code":"\"use strict\";\n\n/**\n * (C) Copyright IBM Corp. 2023.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.McspTokenManager = void 0;\nvar extend_1 = __importDefault(require(\"extend\"));\nvar helpers_1 = require(\"../utils/helpers\");\nvar jwt_token_manager_1 = require(\"./jwt-token-manager\");\n/**\n * This is the path associated with the operation used to obtain\n * an access token from the MCSP token service.\n */\nvar OPERATION_PATH = '/siusermgr/api/1.0/apikeys/token';\n/**\n * Token Manager for Multi-Cloud Saas Platform (MCSP) authenticator.\n *\n * The Token Manager will invoke the MCSP token service's 'POST /siusermgr/api/1.0/apikeys/token'\n * operation to obtain an MCSP access token for a user-supplied apikey.\n */\nvar McspTokenManager = /** @class */function (_super) {\n  __extends(McspTokenManager, _super);\n  /**\n   * Create a new McspTokenManager instance.\n   *\n   * @param options - Configuration options\n   * This should be an object containing these fields:\n   * - url: (required) the base endpoint URL for the MCSP token service\n   * - apikey: (required) the API key used to obtain the MCSP access token.\n   * - disableSslVerification: (optional) a flag that indicates whether verification of the token server's SSL certificate\n   * should be disabled or not\n   * - headers: (optional) a set of HTTP headers to be sent with each request to the token service\n   *\n   * @throws Error: the configuration options were invalid.\n   */\n  function McspTokenManager(options) {\n    var _this = _super.call(this, options) || this;\n    _this.requiredOptions = ['apikey', 'url'];\n    _this.tokenName = 'token';\n    (0, helpers_1.validateInput)(options, _this.requiredOptions);\n    _this.apikey = options.apikey;\n    return _this;\n  }\n  McspTokenManager.prototype.requestToken = function () {\n    var requiredHeaders = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    };\n    var parameters = {\n      options: {\n        url: this.url + OPERATION_PATH,\n        body: {\n          apikey: this.apikey\n        },\n        method: 'POST',\n        headers: (0, extend_1.default)(true, {}, this.headers, requiredHeaders),\n        rejectUnauthorized: !this.disableSslVerification\n      }\n    };\n    return this.requestWrapperInstance.sendRequest(parameters);\n  };\n  return McspTokenManager;\n}(jwt_token_manager_1.JwtTokenManager);\nexports.McspTokenManager = McspTokenManager;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","McspTokenManager","extend_1","require","helpers_1","jwt_token_manager_1","OPERATION_PATH","_super","options","_this","requiredOptions","tokenName","validateInput","apikey","requestToken","requiredHeaders","Accept","parameters","url","body","method","headers","default","rejectUnauthorized","disableSslVerification","requestWrapperInstance","sendRequest","JwtTokenManager"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/ibm-cloud-sdk-core/auth/token-managers/mcsp-token-manager.js"],"sourcesContent":["\"use strict\";\n/**\n * (C) Copyright IBM Corp. 2023.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.McspTokenManager = void 0;\nvar extend_1 = __importDefault(require(\"extend\"));\nvar helpers_1 = require(\"../utils/helpers\");\nvar jwt_token_manager_1 = require(\"./jwt-token-manager\");\n/**\n * This is the path associated with the operation used to obtain\n * an access token from the MCSP token service.\n */\nvar OPERATION_PATH = '/siusermgr/api/1.0/apikeys/token';\n/**\n * Token Manager for Multi-Cloud Saas Platform (MCSP) authenticator.\n *\n * The Token Manager will invoke the MCSP token service's 'POST /siusermgr/api/1.0/apikeys/token'\n * operation to obtain an MCSP access token for a user-supplied apikey.\n */\nvar McspTokenManager = /** @class */ (function (_super) {\n    __extends(McspTokenManager, _super);\n    /**\n     * Create a new McspTokenManager instance.\n     *\n     * @param options - Configuration options\n     * This should be an object containing these fields:\n     * - url: (required) the base endpoint URL for the MCSP token service\n     * - apikey: (required) the API key used to obtain the MCSP access token.\n     * - disableSslVerification: (optional) a flag that indicates whether verification of the token server's SSL certificate\n     * should be disabled or not\n     * - headers: (optional) a set of HTTP headers to be sent with each request to the token service\n     *\n     * @throws Error: the configuration options were invalid.\n     */\n    function McspTokenManager(options) {\n        var _this = _super.call(this, options) || this;\n        _this.requiredOptions = ['apikey', 'url'];\n        _this.tokenName = 'token';\n        (0, helpers_1.validateInput)(options, _this.requiredOptions);\n        _this.apikey = options.apikey;\n        return _this;\n    }\n    McspTokenManager.prototype.requestToken = function () {\n        var requiredHeaders = {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        };\n        var parameters = {\n            options: {\n                url: this.url + OPERATION_PATH,\n                body: {\n                    apikey: this.apikey,\n                },\n                method: 'POST',\n                headers: (0, extend_1.default)(true, {}, this.headers, requiredHeaders),\n                rejectUnauthorized: !this.disableSslVerification,\n            },\n        };\n        return this.requestWrapperInstance.sendRequest(parameters);\n    };\n    return McspTokenManager;\n}(jwt_token_manager_1.JwtTokenManager));\nexports.McspTokenManager = McspTokenManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}