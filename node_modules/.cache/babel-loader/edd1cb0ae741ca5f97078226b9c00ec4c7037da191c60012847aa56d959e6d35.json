{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromStream = exports.fromBuffer = exports.EndOfStreamError = exports.fromFile = void 0;\nconst fs = require(\"./FsPromise\");\nconst core = require(\"./core\");\nvar FileTokenizer_1 = require(\"./FileTokenizer\");\nObject.defineProperty(exports, \"fromFile\", {\n  enumerable: true,\n  get: function () {\n    return FileTokenizer_1.fromFile;\n  }\n});\nvar core_1 = require(\"./core\");\nObject.defineProperty(exports, \"EndOfStreamError\", {\n  enumerable: true,\n  get: function () {\n    return core_1.EndOfStreamError;\n  }\n});\nObject.defineProperty(exports, \"fromBuffer\", {\n  enumerable: true,\n  get: function () {\n    return core_1.fromBuffer;\n  }\n});\n/**\r\n * Construct ReadStreamTokenizer from given Stream.\r\n * Will set fileSize, if provided given Stream has set the .path property.\r\n * @param stream - Node.js Stream.Readable\r\n * @param fileInfo - Pass additional file information to the tokenizer\r\n * @returns Tokenizer\r\n */\nasync function fromStream(stream, fileInfo) {\n  fileInfo = fileInfo ? fileInfo : {};\n  if (stream.path) {\n    const stat = await fs.stat(stream.path);\n    fileInfo.path = stream.path;\n    fileInfo.size = stat.size;\n  }\n  return core.fromStream(stream, fileInfo);\n}\nexports.fromStream = fromStream;","map":{"version":3,"names":["Object","defineProperty","exports","value","fromStream","fromBuffer","EndOfStreamError","fromFile","fs","require","core","FileTokenizer_1","enumerable","get","core_1","stream","fileInfo","path","stat","size"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/strtok3/lib/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fromStream = exports.fromBuffer = exports.EndOfStreamError = exports.fromFile = void 0;\r\nconst fs = require(\"./FsPromise\");\r\nconst core = require(\"./core\");\r\nvar FileTokenizer_1 = require(\"./FileTokenizer\");\r\nObject.defineProperty(exports, \"fromFile\", { enumerable: true, get: function () { return FileTokenizer_1.fromFile; } });\r\nvar core_1 = require(\"./core\");\r\nObject.defineProperty(exports, \"EndOfStreamError\", { enumerable: true, get: function () { return core_1.EndOfStreamError; } });\r\nObject.defineProperty(exports, \"fromBuffer\", { enumerable: true, get: function () { return core_1.fromBuffer; } });\r\n/**\r\n * Construct ReadStreamTokenizer from given Stream.\r\n * Will set fileSize, if provided given Stream has set the .path property.\r\n * @param stream - Node.js Stream.Readable\r\n * @param fileInfo - Pass additional file information to the tokenizer\r\n * @returns Tokenizer\r\n */\r\nasync function fromStream(stream, fileInfo) {\r\n    fileInfo = fileInfo ? fileInfo : {};\r\n    if (stream.path) {\r\n        const stat = await fs.stat(stream.path);\r\n        fileInfo.path = stream.path;\r\n        fileInfo.size = stat.size;\r\n    }\r\n    return core.fromStream(stream, fileInfo);\r\n}\r\nexports.fromStream = fromStream;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAGF,OAAO,CAACG,UAAU,GAAGH,OAAO,CAACI,gBAAgB,GAAGJ,OAAO,CAACK,QAAQ,GAAG,KAAK,CAAC;AAC9F,MAAMC,EAAE,GAAGC,OAAO,CAAC,aAAa,CAAC;AACjC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIE,eAAe,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAChDT,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,UAAU,EAAE;EAAEU,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,eAAe,CAACJ,QAAQ;EAAE;AAAE,CAAC,CAAC;AACvH,IAAIO,MAAM,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAC9BT,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,kBAAkB,EAAE;EAAEU,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOC,MAAM,CAACR,gBAAgB;EAAE;AAAE,CAAC,CAAC;AAC9HN,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEU,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOC,MAAM,CAACT,UAAU;EAAE;AAAE,CAAC,CAAC;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeD,UAAUA,CAACW,MAAM,EAAEC,QAAQ,EAAE;EACxCA,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAAC,CAAC;EACnC,IAAID,MAAM,CAACE,IAAI,EAAE;IACb,MAAMC,IAAI,GAAG,MAAMV,EAAE,CAACU,IAAI,CAACH,MAAM,CAACE,IAAI,CAAC;IACvCD,QAAQ,CAACC,IAAI,GAAGF,MAAM,CAACE,IAAI;IAC3BD,QAAQ,CAACG,IAAI,GAAGD,IAAI,CAACC,IAAI;EAC7B;EACA,OAAOT,IAAI,CAACN,UAAU,CAACW,MAAM,EAAEC,QAAQ,CAAC;AAC5C;AACAd,OAAO,CAACE,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}