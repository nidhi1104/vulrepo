{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSdkHeaders = void 0;\nvar os = require(\"os\");\n// tslint:disable-next-line:no-var-requires\nvar pkg = require('../package.json');\nfunction getSdkHeaders(serviceName, serviceVersion, operationId) {\n  // disable analytics headers in the browser - they cause cors issues\n  var isBrowser = typeof window !== 'undefined';\n  if (isBrowser) {\n    return {};\n  }\n  var sdkName = 'watson-apis-node-sdk';\n  var sdkVersion = pkg.version;\n  var osName = os.platform();\n  var osVersion = os.release();\n  var nodeVersion = process.version;\n  // note - all node methods are asynchronous, 'async' will always be true\n  var headers = {\n    'User-Agent': \"\".concat(sdkName, \"-\").concat(sdkVersion, \" \").concat(osName, \" \").concat(osVersion, \" \").concat(nodeVersion),\n    'X-IBMCloud-SDK-Analytics': \"service_name=\".concat(serviceName, \";service_version=\").concat(serviceVersion, \";operation_id=\").concat(operationId, \";async=true\")\n  };\n  return headers;\n}\nexports.getSdkHeaders = getSdkHeaders;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSdkHeaders","os","require","pkg","serviceName","serviceVersion","operationId","isBrowser","window","sdkName","sdkVersion","version","osName","platform","osVersion","release","nodeVersion","process","headers","concat"],"sources":["/Users/nidhi/Desktop/cve-analysis-app/node_modules/ibm-watson/lib/common.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSdkHeaders = void 0;\nvar os = require(\"os\");\n// tslint:disable-next-line:no-var-requires\nvar pkg = require('../package.json');\nfunction getSdkHeaders(serviceName, serviceVersion, operationId) {\n    // disable analytics headers in the browser - they cause cors issues\n    var isBrowser = typeof window !== 'undefined';\n    if (isBrowser) {\n        return {};\n    }\n    var sdkName = 'watson-apis-node-sdk';\n    var sdkVersion = pkg.version;\n    var osName = os.platform();\n    var osVersion = os.release();\n    var nodeVersion = process.version;\n    // note - all node methods are asynchronous, 'async' will always be true\n    var headers = {\n        'User-Agent': \"\".concat(sdkName, \"-\").concat(sdkVersion, \" \").concat(osName, \" \").concat(osVersion, \" \").concat(nodeVersion),\n        'X-IBMCloud-SDK-Analytics': \"service_name=\".concat(serviceName, \";service_version=\").concat(serviceVersion, \";operation_id=\").concat(operationId, \";async=true\"),\n    };\n    return headers;\n}\nexports.getSdkHeaders = getSdkHeaders;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACpC,SAASF,aAAaA,CAACI,WAAW,EAAEC,cAAc,EAAEC,WAAW,EAAE;EAC7D;EACA,IAAIC,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW;EAC7C,IAAID,SAAS,EAAE;IACX,OAAO,CAAC,CAAC;EACb;EACA,IAAIE,OAAO,GAAG,sBAAsB;EACpC,IAAIC,UAAU,GAAGP,GAAG,CAACQ,OAAO;EAC5B,IAAIC,MAAM,GAAGX,EAAE,CAACY,QAAQ,CAAC,CAAC;EAC1B,IAAIC,SAAS,GAAGb,EAAE,CAACc,OAAO,CAAC,CAAC;EAC5B,IAAIC,WAAW,GAAGC,OAAO,CAACN,OAAO;EACjC;EACA,IAAIO,OAAO,GAAG;IACV,YAAY,EAAE,EAAE,CAACC,MAAM,CAACV,OAAO,EAAE,GAAG,CAAC,CAACU,MAAM,CAACT,UAAU,EAAE,GAAG,CAAC,CAACS,MAAM,CAACP,MAAM,EAAE,GAAG,CAAC,CAACO,MAAM,CAACL,SAAS,EAAE,GAAG,CAAC,CAACK,MAAM,CAACH,WAAW,CAAC;IAC5H,0BAA0B,EAAE,eAAe,CAACG,MAAM,CAACf,WAAW,EAAE,mBAAmB,CAAC,CAACe,MAAM,CAACd,cAAc,EAAE,gBAAgB,CAAC,CAACc,MAAM,CAACb,WAAW,EAAE,aAAa;EACnK,CAAC;EACD,OAAOY,OAAO;AAClB;AACApB,OAAO,CAACE,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}